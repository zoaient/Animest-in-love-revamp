{
  "version": 3,
  "sources": ["../../vuetify/src/components/VDivider/VDivider.tsx"],
  "sourcesContent": ["// Styles\nimport './VDivider.sass'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, genericComponent, propsFactory, useRender } from '@/util'\n\ntype DividerKey = 'borderRightWidth' | 'borderTopWidth' | 'height' | 'width'\ntype DividerStyles = Partial<Record<DividerKey, string>>\n\nexport const makeVDividerProps = propsFactory({\n  color: String,\n  inset: Boolean,\n  length: [Number, String],\n  opacity: [Number, String],\n  thickness: [Number, String],\n  vertical: Boolean,\n\n  ...makeComponentProps(),\n  ...makeThemeProps(),\n}, 'VDivider')\n\nexport const VDivider = genericComponent()({\n  name: 'VDivider',\n\n  props: makeVDividerProps(),\n\n  setup (props, { attrs, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { textColorClasses, textColorStyles } = useTextColor(() => props.color)\n    const dividerStyles = computed(() => {\n      const styles: DividerStyles = {}\n\n      if (props.length) {\n        styles[props.vertical ? 'height' : 'width'] = convertToUnit(props.length)\n      }\n\n      if (props.thickness) {\n        styles[props.vertical ? 'borderRightWidth' : 'borderTopWidth'] = convertToUnit(props.thickness)\n      }\n\n      return styles\n    })\n\n    useRender(() => {\n      const divider = (\n        <hr\n          class={[\n            {\n              'v-divider': true,\n              'v-divider--inset': props.inset,\n              'v-divider--vertical': props.vertical,\n            },\n            themeClasses.value,\n            textColorClasses.value,\n            props.class,\n          ]}\n          style={[\n            dividerStyles.value,\n            textColorStyles.value,\n            { '--v-border-opacity': props.opacity },\n            props.style,\n          ]}\n          aria-orientation={\n            !attrs.role || attrs.role === 'separator'\n              ? props.vertical ? 'vertical' : 'horizontal'\n              : undefined\n          }\n          role={ `${attrs.role || 'separator'}` }\n        />\n      )\n\n      if (!slots.default) return divider\n\n      return (\n        <div\n          class={[\n            'v-divider__wrapper',\n            {\n              'v-divider__wrapper--vertical': props.vertical,\n              'v-divider__wrapper--inset': props.inset,\n            },\n          ]}\n        >\n          { divider }\n\n          <div class=\"v-divider__content\">\n            { slots.default() }\n          </div>\n\n          { divider }\n        </div>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VDivider = InstanceType<typeof VDivider>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AACA,OAAA;AAcO,IAAMA,oBAAoBC,aAAa;EAC5CC,OAAOC;EACPC,OAAOC;EACPC,QAAQ,CAACC,QAAQJ,MAAM;EACvBK,SAAS,CAACD,QAAQJ,MAAM;EACxBM,WAAW,CAACF,QAAQJ,MAAM;EAC1BO,UAAUL;EAEV,GAAGM,mBAAmB;EACtB,GAAGC,eAAe;AACpB,GAAG,UAAU;AAEN,IAAMC,WAAWC,iBAAiB,EAAE;EACzCC,MAAM;EAENC,OAAOhB,kBAAkB;EAEzBiB,MAAOD,OAAKE,MAAoB;AAAA,QAAlB;MAAEC;MAAOC;IAAM,IAACF;AAC5B,UAAM;MAAEG;IAAa,IAAIC,aAAaN,KAAK;AAC3C,UAAM;MAAEO;MAAkBC;IAAgB,IAAIC,aAAa,MAAMT,MAAMd,KAAK;AAC5E,UAAMwB,gBAAgBC,SAAS,MAAM;AACnC,YAAMC,SAAwB,CAAC;AAE/B,UAAIZ,MAAMV,QAAQ;AAChBsB,eAAOZ,MAAMN,WAAW,WAAW,OAAO,IAAImB,cAAcb,MAAMV,MAAM;MAC1E;AAEA,UAAIU,MAAMP,WAAW;AACnBmB,eAAOZ,MAAMN,WAAW,qBAAqB,gBAAgB,IAAImB,cAAcb,MAAMP,SAAS;MAChG;AAEA,aAAOmB;IACT,CAAC;AAEDE,cAAU,MAAM;AACd,YAAMC,UAAOC,gBAAA,MAAA;QAAA,SAAAC,eAEF,CACL;UACE,aAAa;UACb,oBAAoBjB,MAAMZ;UAC1B,uBAAuBY,MAAMN;QAC/B,GACAW,aAAaa,OACbX,iBAAiBW,OACjBlB,MAAMmB,KAAK,CACZ;QAAA,SAAAC,eACM,CACLV,cAAcQ,OACdV,gBAAgBU,OAChB;UAAE,sBAAsBlB,MAAMR;QAAQ,GACtCQ,MAAMqB,KAAK,CACZ;QAAA,oBAEC,CAAClB,MAAMmB,QAAQnB,MAAMmB,SAAS,cAC1BtB,MAAMN,WAAW,aAAa,eAC9B6B;QAAS,QAER,GAAGpB,MAAMmB,QAAQ,WAAW;MAAE,GAAA,IAAA;AAIzC,UAAI,CAAClB,MAAMoB,QAAS,QAAOT;AAE3B,aAAAC,gBAAA,OAAA;QAAA,SAAAC,eAEW,CACL,sBACA;UACE,gCAAgCjB,MAAMN;UACtC,6BAA6BM,MAAMZ;QACrC,CAAC,CACF;MAAA,GAAA,CAEC2B,SAAOC,gBAAA,OAAA;QAAA,SAAA;MAAA,GAAA,CAGLZ,MAAMoB,QAAQ,CAAC,CAAA,GAGjBT,OAAO,CAAA;IAGf,CAAC;AAED,WAAO,CAAC;EACV;AACF,CAAC;",
  "names": ["makeVDividerProps", "propsFactory", "color", "String", "inset", "Boolean", "length", "Number", "opacity", "thickness", "vertical", "makeComponentProps", "makeThemeProps", "VDivider", "genericComponent", "name", "props", "setup", "_ref", "attrs", "slots", "themeClasses", "provideTheme", "textColorClasses", "textColorStyles", "useTextColor", "dividerStyles", "computed", "styles", "convertToUnit", "useRender", "divider", "_createElementVNode", "_normalizeClass", "value", "class", "_normalizeStyle", "style", "role", "undefined", "default"]
}
