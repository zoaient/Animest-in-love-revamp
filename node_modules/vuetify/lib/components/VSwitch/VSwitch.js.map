{"version":3,"file":"VSwitch.js","names":["VScaleTransition","VDefaultsProvider","VIcon","makeVInputProps","VInput","VProgressCircular","makeVSelectionControlProps","VSelectionControl","useFocus","forwardRefs","LoaderSlot","useLoader","useProxiedModel","ref","toRef","useId","filterInputAttrs","genericComponent","IN_BROWSER","propsFactory","useRender","makeVSwitchProps","indeterminate","Boolean","inset","flat","loading","type","String","default","VSwitch","name","inheritAttrs","props","emits","focused","value","setup","_ref","attrs","slots","model","loaderClasses","isFocused","focus","blur","control","inputRef","isForcedColorsModeActive","window","matchMedia","matches","loaderColor","color","uid","id","onChange","onTrackClick","e","stopPropagation","preventDefault","input","click","rootAttrs","controlAttrs","inputProps","filterProps","controlProps","_createVNode","_mergeProps","class","$event","style","_ref2","messagesId","isDisabled","isReadonly","isValid","slotProps","undefined","_ref3","backgroundColorClasses","backgroundColorStyles","_createElementVNode","_normalizeClass","_normalizeStyle","_ref4","inputNode","icon","_Fragment","thumb","size","loader","isActive"],"sources":["../../../src/components/VSwitch/VSwitch.tsx"],"sourcesContent":["// Styles\nimport './VSwitch.sass'\n\n// Components\nimport { VScaleTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VProgressCircular } from '@/components/VProgressCircular'\nimport { makeVSelectionControlProps, VSelectionControl } from '@/components/VSelectionControl/VSelectionControl'\n\n// Composables\nimport { useFocus } from '@/composables/focus'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { LoaderSlot, useLoader } from '@/composables/loader'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { ref, toRef, useId } from 'vue'\nimport { filterInputAttrs, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ComputedRef, Ref } from 'vue'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { VSelectionControlSlots } from '@/components/VSelectionControl/VSelectionControl'\nimport type { IconValue } from '@/composables/icons'\nimport type { LoaderSlotProps } from '@/composables/loader'\nimport type { GenericProps } from '@/util'\n\nexport type VSwitchSlot = {\n  model: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n}\n\nexport type VSwitchSlots =\n  & VInputSlots\n  & VSelectionControlSlots\n  & {\n    loader: LoaderSlotProps\n    thumb: { icon: IconValue | undefined } & VSwitchSlot\n    'track-false': VSwitchSlot\n    'track-true': VSwitchSlot\n  }\n\nexport const makeVSwitchProps = propsFactory({\n  indeterminate: Boolean,\n  inset: Boolean,\n  flat: Boolean,\n  loading: {\n    type: [Boolean, String],\n    default: false,\n  },\n\n  ...makeVInputProps(),\n  ...makeVSelectionControlProps(),\n}, 'VSwitch')\n\nexport const VSwitch = genericComponent<new <T>(\n  props: {\n    modelValue?: T | null\n    'onUpdate:modelValue'?: (value: T | null) => void\n  },\n  slots: VSwitchSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VSwitch',\n\n  inheritAttrs: false,\n\n  props: makeVSwitchProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n    'update:indeterminate': (value: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const model = useProxiedModel(props, 'modelValue')\n    const { loaderClasses } = useLoader(props)\n    const { isFocused, focus, blur } = useFocus(props)\n    const control = ref<VSelectionControl>()\n    const inputRef = ref<VInput>()\n    const isForcedColorsModeActive = IN_BROWSER && window.matchMedia('(forced-colors: active)').matches\n\n    const loaderColor = toRef(() => {\n      return typeof props.loading === 'string' && props.loading !== ''\n        ? props.loading\n        : props.color\n    })\n\n    const uid = useId()\n    const id = toRef(() => props.id || `switch-${uid}`)\n\n    function onChange () {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n    function onTrackClick (e: Event) {\n      e.stopPropagation()\n      e.preventDefault()\n      control.value?.input?.click()\n    }\n\n    useRender(() => {\n      const [rootAttrs, controlAttrs] = filterInputAttrs(attrs)\n      const inputProps = VInput.filterProps(props)\n      const controlProps = VSelectionControl.filterProps(props)\n\n      return (\n        <VInput\n          ref={ inputRef }\n          class={[\n            'v-switch',\n            { 'v-switch--flat': props.flat },\n            { 'v-switch--inset': props.inset },\n            { 'v-switch--indeterminate': indeterminate.value },\n            loaderClasses.value,\n            props.class,\n          ]}\n          { ...rootAttrs }\n          { ...inputProps }\n          v-model={ model.value }\n          id={ id.value }\n          focused={ isFocused.value }\n          style={ props.style }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              messagesId,\n              isDisabled,\n              isReadonly,\n              isValid,\n            }) => {\n              const slotProps = {\n                model,\n                isValid,\n              }\n\n              return (\n                <VSelectionControl\n                  ref={ control }\n                  { ...controlProps }\n                  v-model={ model.value }\n                  id={ id.value }\n                  aria-describedby={ messagesId.value }\n                  type=\"checkbox\"\n                  onUpdate:modelValue={ onChange }\n                  aria-checked={ indeterminate.value ? 'mixed' : undefined }\n                  disabled={ isDisabled.value }\n                  readonly={ isReadonly.value }\n                  onFocus={ focus }\n                  onBlur={ blur }\n                  { ...controlAttrs }\n                >\n                  {{\n                    ...slots,\n                    default: ({ backgroundColorClasses, backgroundColorStyles }) => (\n                      <div\n                        class={[\n                          'v-switch__track',\n                          !isForcedColorsModeActive ? backgroundColorClasses.value : undefined,\n                        ]}\n                        style={ backgroundColorStyles.value }\n                        onClick={ onTrackClick }\n                      >\n                        { slots['track-true'] && (\n                          <div key=\"prepend\" class=\"v-switch__track-true\">\n                            { slots['track-true'](slotProps) }\n                          </div>\n                        )}\n\n                        { slots['track-false'] && (\n                          <div key=\"append\" class=\"v-switch__track-false\">\n                            { slots['track-false'](slotProps) }\n                          </div>\n                        )}\n                      </div>\n                    ),\n                    input: ({ inputNode, icon, backgroundColorClasses, backgroundColorStyles }) => (\n                      <>\n                        { inputNode }\n                        <div\n                          class={[\n                            'v-switch__thumb',\n                            { 'v-switch__thumb--filled': icon || props.loading },\n                            props.inset || isForcedColorsModeActive ? undefined : backgroundColorClasses.value,\n                          ]}\n                          style={ props.inset ? undefined : backgroundColorStyles.value }\n                        >\n                          { slots.thumb ? (\n                            <VDefaultsProvider\n                              defaults={{\n                                VIcon: {\n                                  icon,\n                                  size: 'x-small',\n                                },\n                              }}\n                            >\n                              { slots.thumb({ ...slotProps, icon }) }\n                            </VDefaultsProvider>\n                          ) : (\n                            <VScaleTransition>\n                              { !props.loading ? (\n                                (icon && (\n                                  <VIcon\n                                    key={ String(icon) }\n                                    icon={ icon }\n                                    size=\"x-small\"\n                                  />\n                                ))) : (\n                                <LoaderSlot\n                                  name=\"v-switch\"\n                                  active\n                                  color={ isValid.value === false ? undefined : loaderColor.value }\n                                >\n                                  { slotProps => (\n                                    slots.loader\n                                      ? slots.loader(slotProps)\n                                      : (\n                                        <VProgressCircular\n                                          active={ slotProps.isActive }\n                                          color={ slotProps.color }\n                                          indeterminate\n                                          size=\"16\"\n                                          width=\"2\"\n                                        />\n                                      )\n                                  )}\n                                </LoaderSlot>\n                              )}\n                            </VScaleTransition>\n                          )}\n                        </div>\n                      </>\n                    ),\n                  }}\n                </VSelectionControl>\n              )\n            },\n          }}\n        </VInput>\n      )\n    })\n\n    return forwardRefs({}, inputRef)\n  },\n})\n\nexport type VSwitch = InstanceType<typeof VSwitch>\n"],"mappings":"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","ignoreList":[]}