{"version":3,"file":"VTreeviewChildren.js","names":["VTreeviewGroup","makeVTreeviewItemProps","VTreeviewItem","VCheckboxBtn","VDivider","VListSubheader","makeDensityProps","IconValue","computed","reactive","ref","toRaw","genericComponent","getIndentLines","pick","propsFactory","renderSlot","makeVTreeviewChildrenProps","fluid","Boolean","disabled","loadChildren","Function","loadingIcon","type","String","default","items","Array","openOnClick","undefined","indeterminateIcon","falseIcon","trueIcon","returnObject","activatable","selectable","selectedColor","selectStrategy","Object","index","Number","isLastGroup","separateRoots","parentIndentLines","indentLinesVariant","path","VTreeviewChildren","name","props","setup","_ref","slots","isLoading","Set","activatorItems","isClickOnOpen","checkChildren","item","length","children","add","value","raw","delete","selectItem","select","isSelected","map","itemProps","loading","has","nextItemHasChildren","at","depth","isLast","treeItemProps","isFirst","hideAction","hideActions","indentLines","leafLinks","variant","slotsWithItem","prepend","slotProps","_createElementVNode","_Fragment","includes","_createVNode","density","isIndeterminate","v","e","stopPropagation","key","internalItem","append","title","subtitle","treeviewGroupProps","filterProps","treeviewChildrenProps","_mergeProps","activator","_ref2","activatorProps","listItemProps","onToggleExpand","onClick","el","node","divider","subheader","leaf"],"sources":["../../../src/components/VTreeview/VTreeviewChildren.tsx"],"sourcesContent":["// Components\nimport { VTreeviewGroup } from './VTreeviewGroup'\nimport { makeVTreeviewItemProps, VTreeviewItem } from './VTreeviewItem'\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VDivider } from '@/components/VDivider'\nimport { VListSubheader } from '@/components/VList'\n\n// Composables\nimport { makeDensityProps } from '@/composables/density'\nimport { IconValue } from '@/composables/icons'\n\n// Utilities\nimport { computed, reactive, ref, toRaw } from 'vue'\nimport { genericComponent, getIndentLines, pick, propsFactory, renderSlot } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { InternalListItem } from '@/components/VList/VList'\nimport type { VListItemSlots } from '@/components/VList/VListItem'\nimport type { SelectStrategyProp } from '@/composables/nested/nested'\nimport type { GenericProps, IndentLinesVariant, IndentLineType } from '@/util'\n\nexport type VTreeviewChildrenSlots<T> = {\n  [K in keyof Omit<VListItemSlots, 'default'>]: VListItemSlots[K] & {\n    item: T\n    internalItem: InternalListItem<T>\n  }\n} & {\n  default: never\n  item: {\n    props: InternalListItem['props']\n    item: T\n    internalItem: InternalListItem<T>\n  }\n  divider: { props: InternalListItem['props'] }\n  subheader: { props: InternalListItem['props'] }\n}\n\nexport const makeVTreeviewChildrenProps = propsFactory({\n  fluid: Boolean,\n  disabled: Boolean,\n  loadChildren: Function as PropType<(item: unknown) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  items: Array as PropType<readonly InternalListItem[]>,\n  openOnClick: {\n    type: Boolean,\n    default: undefined,\n  },\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate',\n  },\n  falseIcon: IconValue,\n  trueIcon: IconValue,\n  returnObject: Boolean,\n  activatable: Boolean,\n  selectable: Boolean,\n  selectedColor: String,\n  selectStrategy: [String, Function, Object] as PropType<SelectStrategyProp>,\n  index: Number,\n  isLastGroup: Boolean,\n  separateRoots: Boolean,\n  parentIndentLines: Array as PropType<IndentLineType[]>,\n  indentLinesVariant: String as PropType<IndentLinesVariant>,\n  path: {\n    type: Array as PropType<number[]>,\n    default: () => [],\n  },\n  ...pick(makeVTreeviewItemProps(), ['hideActions']),\n  ...makeDensityProps(),\n}, 'VTreeviewChildren')\n\nexport const VTreeviewChildren = genericComponent<new <T extends InternalListItem>(\n  props: {\n    items?: readonly T[]\n  },\n  slots: VTreeviewChildrenSlots<T>\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VTreeviewChildren',\n\n  props: makeVTreeviewChildrenProps(),\n\n  setup (props, { slots }) {\n    const isLoading = reactive(new Set<unknown>())\n    const activatorItems = ref<VTreeviewItem[]>([])\n\n    const isClickOnOpen = computed(() => (\n      !props.disabled && (\n        props.openOnClick != null\n          ? props.openOnClick\n          : props.selectable && !props.activatable\n      )))\n\n    async function checkChildren (item: InternalListItem) {\n      try {\n        if (!props.items?.length || !props.loadChildren) return\n\n        if (item?.children?.length === 0) {\n          isLoading.add(item.value)\n          await props.loadChildren(item.raw)\n        }\n      } finally {\n        isLoading.delete(item.value)\n      }\n    }\n\n    function selectItem (select: (value: boolean) => void, isSelected: boolean) {\n      if (props.selectable) {\n        select(isSelected)\n      }\n    }\n\n    return () => slots.default?.() ?? props.items?.map((item, index, items) => {\n      const { children, props: itemProps } = item\n      const loading = isLoading.has(item.value)\n      const nextItemHasChildren = !!items.at(index + 1)?.children\n\n      const depth = props.path?.length ?? 0\n      const isLast = items.length - 1 === index\n      const treeItemProps = {\n        index,\n        depth,\n        isFirst: index === 0,\n        isLast,\n        path: [...props.path, index],\n        hideAction: props.hideActions,\n      }\n\n      const indentLines = getIndentLines({\n        depth,\n        isLast,\n        isLastGroup: props.isLastGroup,\n        leafLinks: !props.hideActions && !props.fluid,\n        separateRoots: props.separateRoots,\n        parentIndentLines: props.parentIndentLines,\n        variant: props.indentLinesVariant,\n      })\n\n      const slotsWithItem = {\n        prepend: slotProps => (\n          <>\n            { props.selectable && (!children || (children && !['leaf', 'single-leaf'].includes(props.selectStrategy as string))) && (\n              <div>\n                <VCheckboxBtn\n                  key={ item.value }\n                  modelValue={ slotProps.isSelected }\n                  disabled={ props.disabled }\n                  loading={ loading }\n                  color={ props.selectedColor }\n                  density={ props.density }\n                  indeterminate={ slotProps.isIndeterminate }\n                  indeterminateIcon={ props.indeterminateIcon }\n                  falseIcon={ props.falseIcon }\n                  trueIcon={ props.trueIcon }\n                  onUpdate:modelValue={ v => selectItem(slotProps.select, v) }\n                  onClick={ (e: PointerEvent) => e.stopPropagation() }\n                  onKeydown={ (e: KeyboardEvent) => {\n                    if (!['Enter', 'Space'].includes(e.key)) return\n                    e.stopPropagation()\n                    selectItem(slotProps.select, slotProps.isSelected)\n                  }}\n                />\n              </div>\n            )}\n\n            { slots.prepend?.({ ...slotProps, ...treeItemProps, item: item.raw, internalItem: item }) }\n          </>\n        ),\n        append: slots.append\n          ? slotProps => slots.append?.({ ...slotProps, ...treeItemProps, item: item.raw, internalItem: item })\n          : undefined,\n        title: slots.title ? slotProps => slots.title?.({ ...slotProps, item: item.raw, internalItem: item }) : undefined,\n        subtitle: slots.subtitle ? slotProps => slots.subtitle?.({ ...slotProps, item: item.raw, internalItem: item }) : undefined,\n      } satisfies VTreeviewItem['$props']['$children']\n\n      const treeviewGroupProps = VTreeviewGroup.filterProps(itemProps)\n      const treeviewChildrenProps = VTreeviewChildren.filterProps({ ...props, ...treeItemProps })\n\n      return children ? (\n        <VTreeviewGroup\n          { ...treeviewGroupProps }\n          value={ props.returnObject ? item.raw : treeviewGroupProps?.value }\n          rawId={ treeviewGroupProps?.value }\n        >\n          {{\n            activator: ({ props: activatorProps }) => {\n              const listItemProps = {\n                ...itemProps,\n                ...activatorProps,\n                value: itemProps?.value,\n                onToggleExpand: [() => checkChildren(item), activatorProps.onClick] as any,\n                onClick: isClickOnOpen.value\n                  ? [() => checkChildren(item), activatorProps.onClick] as any\n                  : () => selectItem(activatorItems.value[index]?.select, !activatorItems.value[index]?.isSelected),\n              }\n\n              return (\n                <VTreeviewItem\n                  ref={ el => activatorItems.value[index] = el as VTreeviewItem }\n                  { ...listItemProps }\n                  hideActions={ props.hideActions }\n                  indentLines={ indentLines.node }\n                  value={ props.returnObject ? item.raw : itemProps.value }\n                  loading={ loading }\n                  v-slots={ slotsWithItem }\n                />\n              )\n            },\n            default: () => (\n              <VTreeviewChildren\n                { ...treeviewChildrenProps }\n                items={ children }\n                indentLinesVariant={ props.indentLinesVariant }\n                parentIndentLines={ indentLines.children }\n                isLastGroup={ nextItemHasChildren }\n                returnObject={ props.returnObject }\n                v-slots={ slots }\n              />\n            ),\n          }}\n        </VTreeviewGroup>\n      ) : renderSlot(\n        slots.item,\n        { props: itemProps, item: item.raw, internalItem: item },\n        () => {\n          if (item.type === 'divider') {\n            return renderSlot(\n              slots.divider,\n              { props: item.raw },\n              () => <VDivider { ...item.props } />,\n            )\n          }\n          if (item.type === 'subheader') {\n            return renderSlot(\n              slots.subheader,\n              { props: item.raw },\n              () => <VListSubheader { ...item.props } />,\n            )\n          }\n          return (\n            <VTreeviewItem\n              { ...itemProps }\n              hideActions={ props.hideActions }\n              indentLines={ indentLines.leaf }\n              value={ props.returnObject ? toRaw(item.raw) : itemProps.value }\n              v-slots={ slotsWithItem }\n            />\n          )\n        })\n    })\n  },\n})\n"],"mappings":"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","ignoreList":[]}