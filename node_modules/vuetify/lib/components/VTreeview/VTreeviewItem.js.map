{"version":3,"file":"VTreeviewItem.js","names":["VBtn","VListItemAction","makeVListItemProps","VListItem","VProgressCircular","forwardRefs","IconValue","computed","inject","ref","toRaw","genericComponent","propsFactory","useRender","VTreeviewSymbol","makeVTreeviewItemProps","loading","Boolean","hideActions","indentLines","Array","toggleIcon","slim","VTreeviewItem","name","props","emits","toggleExpand","value","setup","_ref","slots","emit","visibleIds","vListItemRef","isActivatableGroupActivator","root","activatable","isGroupActivator","vListItemRefIsClickable","link","isClickable","list","disabled","isFiltered","has","id","activateGroupActivator","e","activate","isActivated","onClickAction","preventDefault","stopPropagation","listItemProps","filterProps","hasPrepend","prepend","_createVNode","_mergeProps","undefined","class","slotProps","_createElementVNode","_Fragment","length","map","type","_normalizeClass","default","loader"],"sources":["../../../src/components/VTreeview/VTreeviewItem.tsx"],"sourcesContent":["// Styles\nimport './VTreeviewItem.sass'\n\n// Components\nimport { VBtn } from '@/components/VBtn'\nimport { VListItemAction } from '@/components/VList'\nimport { makeVListItemProps, VListItem } from '@/components/VList/VListItem'\nimport { VProgressCircular } from '@/components/VProgressCircular'\n\n// Composables\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { IconValue } from '@/composables/icons'\n\n// Utilities\nimport { computed, inject, ref, toRaw } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { VTreeviewSymbol } from './shared'\nimport type { VListItemSlots } from '@/components/VList/VListItem'\nimport type { IndentLineType } from '@/util'\n\nexport const makeVTreeviewItemProps = propsFactory({\n  loading: Boolean,\n  hideActions: Boolean,\n  indentLines: Array as PropType<IndentLineType[]>,\n  toggleIcon: IconValue,\n\n  ...makeVListItemProps({ slim: true }),\n}, 'VTreeviewItem')\n\nexport const VTreeviewItem = genericComponent<VListItemSlots>()({\n  name: 'VTreeviewItem',\n\n  props: makeVTreeviewItemProps(),\n\n  emits: {\n    toggleExpand: (value: PointerEvent) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const visibleIds = inject(VTreeviewSymbol, { visibleIds: ref() }).visibleIds\n\n    const vListItemRef = ref<VListItem>()\n\n    const isActivatableGroupActivator = computed(() =>\n      (vListItemRef.value?.root.activatable.value) &&\n      vListItemRef.value?.isGroupActivator\n    )\n    const vListItemRefIsClickable = computed(() => (\n      vListItemRef.value?.link.isClickable.value ||\n      (props.value != null && !!vListItemRef.value?.list)\n    ))\n    const isClickable = computed(() =>\n      !props.disabled &&\n      props.link !== false &&\n      (props.link || vListItemRefIsClickable.value || isActivatableGroupActivator.value)\n    )\n    const isFiltered = computed(() => visibleIds.value && !visibleIds.value.has(toRaw(vListItemRef.value?.id)))\n\n    function activateGroupActivator (e: MouseEvent | KeyboardEvent) {\n      if (isClickable.value && isActivatableGroupActivator.value) {\n        vListItemRef.value?.activate(!vListItemRef.value?.isActivated, e)\n      }\n    }\n\n    function onClickAction (e: PointerEvent) {\n      e.preventDefault()\n      e.stopPropagation()\n      emit('toggleExpand', e)\n    }\n\n    useRender(() => {\n      const listItemProps = VListItem.filterProps(props)\n      const hasPrepend = slots.prepend || props.toggleIcon || props.indentLines\n\n      return (\n        <VListItem\n          ref={ vListItemRef }\n          { ...listItemProps }\n          active={ vListItemRef.value?.isActivated || undefined }\n          class={[\n            'v-treeview-item',\n            {\n              'v-treeview-item--activatable-group-activator': isActivatableGroupActivator.value,\n              'v-treeview-item--filtered': isFiltered.value,\n            },\n            props.class,\n          ]}\n          ripple={ false }\n          onClick={ activateGroupActivator }\n        >\n          {{\n            ...slots,\n            prepend: hasPrepend ? slotProps => {\n              return (\n                <>\n                  { props.indentLines && props.indentLines.length > 0 ? (\n                    <div\n                      key=\"indent-lines\"\n                      class=\"v-treeview-indent-lines\"\n                      style={{ '--v-indent-parts': props.indentLines.length }}\n                    >\n                      { props.indentLines.map(type => (\n                        <div class={ `v-treeview-indent-line v-treeview-indent-line--${type}` } />\n                      ))}\n                    </div>\n                  ) : '' }\n                  { !props.hideActions && (\n                    <VListItemAction start>\n                      { props.toggleIcon ? (\n                        <VBtn\n                          density=\"compact\"\n                          icon={ props.toggleIcon }\n                          loading={ props.loading }\n                          variant=\"text\"\n                          onClick={ onClickAction }\n                        >\n                          {{\n                            loader: () => (\n                              <VProgressCircular\n                                indeterminate=\"disable-shrink\"\n                                size=\"20\"\n                                width=\"2\"\n                              />\n                            ),\n                          }}\n                        </VBtn>\n                      ) : (\n                        <div class=\"v-treeview-item__level\" />\n                      )}\n                    </VListItemAction>\n                  )}\n                  { slots.prepend?.(slotProps) }\n                </>\n              )\n            } : undefined,\n          }}\n        </VListItem>\n      )\n    })\n\n    return forwardRefs({}, vListItemRef)\n  },\n})\n\nexport type VTreeviewItem = InstanceType<typeof VTreeviewItem>\n"],"mappings":"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","ignoreList":[]}