{"version":3,"file":"headers.js","names":["capitalize","inject","provide","ref","watchEffect","consoleError","propsFactory","makeDataTableHeaderProps","headers","Array","VDataTableHeadersSymbol","Symbol","for","defaultHeader","title","sortable","defaultActionHeader","width","priorityQueue","arr","arguments","length","undefined","queue","map","element","priority","enqueue","added","i","item","splice","push","size","count","whole","Math","floor","dequeue","shift","extractLeaves","columns","children","child","extractKeys","keys","Set","key","add","getDefaultItem","includes","getDepth","depth","max","parseFixedColumns","items","seenFixed","setFixed","side","parentFixedSide","fixed","lastFixed","firstFixedEnd","isNaN","Number","minWidth","fixedOffset","setFixedOffset","fixedEndOffset","setFixedEndOffset","offset","parseFloat","parse","maxDepth","currentDepth","rowSize","row","fraction","diff","rowspan","colspan","sort","pow","flat","convertToInternalHeaders","internalHeaders","defaultItem","value","internalItem","createHeaders","props","options","sortFunctions","sortRawFunctions","filterFunctions","_headers","Object","slice","groupBy","has","unshift","showSelect","showExpand","parsed","flatHeaders","header","sortRaw","filter","data","useHeaders","Error"],"sources":["../../../../src/components/VDataTable/composables/headers.ts"],"sourcesContent":["// Utilities\nimport { capitalize, inject, provide, ref, watchEffect } from 'vue'\nimport { consoleError, propsFactory } from '@/util'\n\n// Types\nimport type { DeepReadonly, InjectionKey, PropType, Ref } from 'vue'\nimport type { SortItem } from './sort'\nimport type { DataTableCompareFunction, DataTableHeader, InternalDataTableHeader } from '../types'\nimport type { FilterKeyFunctions } from '@/composables/filter'\n\nexport const makeDataTableHeaderProps = propsFactory({\n  headers: Array as PropType<DeepReadonly<DataTableHeader[]>>,\n}, 'DataTable-header')\n\nexport const VDataTableHeadersSymbol: InjectionKey<{\n  headers: Ref<InternalDataTableHeader[][]>\n  columns: Ref<InternalDataTableHeader[]>\n}> = Symbol.for('vuetify:data-table-headers')\n\ntype HeaderProps = {\n  headers: DeepReadonly<DataTableHeader[]> | undefined\n  items: any[]\n}\n\nconst defaultHeader = { title: '', sortable: false }\nconst defaultActionHeader = { ...defaultHeader, width: 48 }\n\nfunction priorityQueue <T> (arr: T[] = []) {\n  const queue: { element: T, priority: number }[] = arr.map(element => ({ element, priority: 0 }))\n\n  return {\n    enqueue: (element: T, priority: number) => {\n      let added = false\n      for (let i = 0; i < queue.length; i++) {\n        const item = queue[i]\n        if (item.priority > priority) {\n          queue.splice(i, 0, { element, priority })\n          added = true\n          break\n        }\n      }\n\n      if (!added) queue.push({ element, priority })\n    },\n    size: () => queue.length,\n    count: () => {\n      let count = 0\n\n      if (!queue.length) return 0\n\n      const whole = Math.floor(queue[0].priority)\n      for (let i = 0; i < queue.length; i++) {\n        if (Math.floor(queue[i].priority) === whole) count += 1\n      }\n\n      return count\n    },\n    dequeue: () => {\n      return queue.shift()\n    },\n  }\n}\n\nfunction extractLeaves (item: InternalDataTableHeader, columns: InternalDataTableHeader[] = []) {\n  if (!item.children) {\n    columns.push(item)\n  } else {\n    for (const child of item.children) {\n      extractLeaves(child, columns)\n    }\n  }\n\n  return columns\n}\n\nfunction extractKeys (headers: DeepReadonly<DataTableHeader[]>, keys = new Set<string>()) {\n  for (const item of headers) {\n    if (item.key) keys.add(item.key)\n\n    if (item.children) {\n      extractKeys(item.children, keys)\n    }\n  }\n\n  return keys\n}\n\nfunction getDefaultItem (item: DeepReadonly<DataTableHeader>) {\n  if (!item.key) return undefined\n  if (item.key === 'data-table-group') return defaultHeader\n  if (['data-table-expand', 'data-table-select'].includes(item.key)) return defaultActionHeader\n  return undefined\n}\n\nfunction getDepth (item: InternalDataTableHeader, depth = 0): number {\n  if (!item.children) return depth\n\n  return Math.max(depth, ...item.children.map(child => getDepth(child, depth + 1)))\n}\n\nfunction parseFixedColumns (items: InternalDataTableHeader[]) {\n  let seenFixed = false\n\n  function setFixed (\n    item: InternalDataTableHeader,\n    side: 'start' | 'end',\n    parentFixedSide: 'start' | 'end' | 'none' = 'none'\n  ) {\n    if (!item) return\n\n    if (parentFixedSide !== 'none') {\n      item.fixed = parentFixedSide\n    }\n\n    // normalize to simplify logic below\n    if (item.fixed === true) {\n      item.fixed = 'start'\n    }\n\n    if (item.fixed === side) {\n      if (item.children) {\n        if (side === 'start') {\n          for (let i = item.children.length - 1; i >= 0; i--) {\n            setFixed(item.children[i], side, side)\n          }\n        } else {\n          for (let i = 0; i < item.children.length; i++) {\n            setFixed(item.children[i], side, side)\n          }\n        }\n      } else {\n        if (!seenFixed && side === 'start') {\n          item.lastFixed = true\n        } else if (!seenFixed && side === 'end') {\n          item.firstFixedEnd = true\n        } else if (isNaN(Number(item.width))) {\n          consoleError(`Multiple fixed columns should have a static width (key: ${item.key})`)\n        } else {\n          item.minWidth = Math.max(Number(item.width) || 0, Number(item.minWidth) || 0)\n        }\n        seenFixed = true\n      }\n    } else {\n      if (item.children) {\n        if (side === 'start') {\n          for (let i = item.children.length - 1; i >= 0; i--) {\n            setFixed(item.children[i], side)\n          }\n        } else {\n          for (let i = 0; i < item.children.length; i++) {\n            setFixed(item.children[i], side)\n          }\n        }\n      } else {\n        seenFixed = false\n      }\n    }\n  }\n\n  for (let i = items.length - 1; i >= 0; i--) {\n    setFixed(items[i], 'start')\n  }\n\n  for (let i = 0; i < items.length; i++) {\n    setFixed(items[i], 'end')\n  }\n\n  let fixedOffset = 0\n  for (let i = 0; i < items.length; i++) {\n    fixedOffset = setFixedOffset(items[i], fixedOffset)\n  }\n\n  let fixedEndOffset = 0\n  for (let i = items.length - 1; i >= 0; i--) {\n    fixedEndOffset = setFixedEndOffset(items[i], fixedEndOffset)\n  }\n}\n\nfunction setFixedOffset (item: InternalDataTableHeader, offset = 0) {\n  if (!item) return offset\n\n  if (item.children) {\n    item.fixedOffset = offset\n    for (const child of item.children) {\n      offset = setFixedOffset(child, offset)\n    }\n  } else if (item.fixed && item.fixed !== 'end') {\n    item.fixedOffset = offset\n    offset += parseFloat(item.width || '0') || 0\n  }\n\n  return offset\n}\n\nfunction setFixedEndOffset (item: InternalDataTableHeader, offset = 0) {\n  if (!item) return offset\n\n  if (item.children) {\n    item.fixedEndOffset = offset\n    for (const child of item.children) {\n      offset = setFixedEndOffset(child, offset)\n    }\n  } else if (item.fixed === 'end') {\n    item.fixedEndOffset = offset\n    offset += parseFloat(item.width || '0') || 0\n  }\n\n  return offset\n}\n\nfunction parse (items: InternalDataTableHeader[], maxDepth: number) {\n  const headers: InternalDataTableHeader[][] = []\n  let currentDepth = 0\n  const queue = priorityQueue(items)\n\n  while (queue.size() > 0) {\n    let rowSize = queue.count()\n    const row: InternalDataTableHeader[] = []\n    let fraction = 1\n    while (rowSize > 0) {\n      const { element: item, priority } = queue.dequeue()!\n      const diff = maxDepth - currentDepth - getDepth(item)\n\n      row.push({\n        ...item,\n        rowspan: diff ?? 1,\n        colspan: item.children ? extractLeaves(item).length : 1,\n      })\n\n      if (item.children) {\n        for (const child of item.children) {\n          // This internally sorts items that are on the same priority \"row\"\n          const sort = priority % 1 + (fraction / Math.pow(10, currentDepth + 2))\n          queue.enqueue(child, currentDepth + diff + sort)\n        }\n      }\n\n      fraction += 1\n      rowSize -= 1\n    }\n    currentDepth += 1\n    headers.push(row)\n  }\n\n  const columns = items.map(item => extractLeaves(item)).flat()\n\n  return { columns, headers }\n}\n\nfunction convertToInternalHeaders (items: DeepReadonly<DataTableHeader[]>) {\n  const internalHeaders: InternalDataTableHeader[] = []\n  for (const item of items) {\n    const defaultItem = { ...getDefaultItem(item), ...item }\n    const key = defaultItem.key ?? (typeof defaultItem.value === 'string' ? defaultItem.value : null)\n    const value = defaultItem.value ?? key ?? null\n    const internalItem: InternalDataTableHeader = {\n      ...defaultItem,\n      key,\n      value,\n      sortable: defaultItem.sortable ?? (defaultItem.key != null || !!defaultItem.sort),\n      children: defaultItem.children ? convertToInternalHeaders(defaultItem.children) : undefined,\n    }\n\n    internalHeaders.push(internalItem)\n  }\n\n  return internalHeaders\n}\n\nexport function createHeaders (\n  props: HeaderProps,\n  options?: {\n    groupBy?: Ref<readonly SortItem[]>\n    showSelect?: Ref<boolean>\n    showExpand?: Ref<boolean>\n  }\n) {\n  const headers = ref<InternalDataTableHeader[][]>([])\n  const columns = ref<InternalDataTableHeader[]>([])\n  const sortFunctions = ref<Record<string, DataTableCompareFunction>>({})\n  const sortRawFunctions = ref<Record<string, DataTableCompareFunction>>({})\n  const filterFunctions = ref<FilterKeyFunctions>({})\n\n  watchEffect(() => {\n    const _headers = props.headers ||\n      Object.keys(props.items[0] ?? {}).map(key => ({ key, title: capitalize(key) })) as never\n\n    const items = _headers.slice()\n    const keys = extractKeys(items)\n\n    if (options?.groupBy?.value.length && !keys.has('data-table-group')) {\n      items.unshift({ key: 'data-table-group', title: 'Group' })\n    }\n\n    if (options?.showSelect?.value && !keys.has('data-table-select')) {\n      items.unshift({ key: 'data-table-select' })\n    }\n\n    if (options?.showExpand?.value && !keys.has('data-table-expand')) {\n      items.push({ key: 'data-table-expand' })\n    }\n\n    const internalHeaders = convertToInternalHeaders(items)\n\n    parseFixedColumns(internalHeaders)\n\n    const maxDepth = Math.max(...internalHeaders.map(item => getDepth(item))) + 1\n    const parsed = parse(internalHeaders, maxDepth)\n\n    headers.value = parsed.headers\n    columns.value = parsed.columns\n\n    const flatHeaders = parsed.headers.flat(1)\n\n    for (const header of flatHeaders) {\n      if (!header.key) continue\n\n      if (header.sortable) {\n        if (header.sort) {\n          sortFunctions.value[header.key] = header.sort\n        }\n\n        if (header.sortRaw) {\n          sortRawFunctions.value[header.key] = header.sortRaw\n        }\n      }\n\n      if (header.filter) {\n        filterFunctions.value[header.key] = header.filter\n      }\n    }\n  })\n\n  const data = { headers, columns, sortFunctions, sortRawFunctions, filterFunctions }\n\n  provide(VDataTableHeadersSymbol, data)\n\n  return data\n}\n\nexport function useHeaders () {\n  const data = inject(VDataTableHeadersSymbol)\n\n  if (!data) throw new Error('Missing headers!')\n\n  return data\n}\n"],"mappings":"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","ignoreList":[]}