{"version":3,"file":"hotkey.js","names":["splitKeyCombination","splitKeySequence","onBeforeUnmount","toValue","watch","IN_BROWSER","getCurrentInstance","useHotkey","keys","callback","options","arguments","length","undefined","event","inputs","preventDefault","sequenceTimeout","isMac","navigator","userAgent","includes","timeout","keyGroups","isSequence","groupIndex","clearTimer","clearTimeout","isInputFocused","activeElement","document","tagName","isContentEditable","contentEditable","resetSequence","handler","e","group","matchesKeyGroup","window","setTimeout","cleanup","removeEventListener","unrefKeys","groups","toLowerCase","addEventListener","immediate","newEvent","oldEvent","parseKeyGroup","MODIFIERS","parts","modifiers","Object","fromEntries","map","m","actualKey","part","expectCtrl","ctrl","cmd","meta","expectMeta","ctrlKey","metaKey","shiftKey","shift","altKey","alt","key"],"sources":["../../../src/composables/hotkey/hotkey.ts"],"sourcesContent":["// Composables\nimport { splitKeyCombination, splitKeySequence } from '@/composables/hotkey/hotkey-parsing'\n\n// Utilities\nimport { onBeforeUnmount, toValue, watch } from 'vue'\nimport { IN_BROWSER } from '@/util'\nimport { getCurrentInstance } from '@/util/getCurrentInstance'\n\n// Types\nimport type { MaybeRef } from '@/util'\n\ninterface HotkeyOptions {\n  event?: MaybeRef<'keydown' | 'keyup'>\n  inputs?: MaybeRef<boolean>\n  preventDefault?: MaybeRef<boolean>\n  sequenceTimeout?: MaybeRef<number>\n}\n\nexport function useHotkey (\n  keys: MaybeRef<string | undefined>,\n  callback: (e: KeyboardEvent) => void,\n  options: HotkeyOptions = {}\n) {\n  if (!IN_BROWSER) return function () {}\n\n  const {\n    event = 'keydown',\n    inputs = false,\n    preventDefault = true,\n    sequenceTimeout = 1000,\n  } = options\n\n  const isMac = navigator?.userAgent?.includes('Macintosh') ?? false\n  let timeout = 0\n  let keyGroups: string[]\n  let isSequence = false\n  let groupIndex = 0\n\n  function clearTimer () {\n    if (!timeout) return\n\n    clearTimeout(timeout)\n    timeout = 0\n  }\n\n  function isInputFocused () {\n    if (toValue(inputs)) return false\n\n    const activeElement = document.activeElement as HTMLElement\n\n    return activeElement && (\n      activeElement.tagName === 'INPUT' ||\n      activeElement.tagName === 'TEXTAREA' ||\n      activeElement.isContentEditable ||\n      activeElement.contentEditable === 'true'\n    )\n  }\n\n  function resetSequence () {\n    groupIndex = 0\n    clearTimer()\n  }\n\n  function handler (e: KeyboardEvent) {\n    const group = keyGroups[groupIndex]\n\n    if (!group || isInputFocused()) return\n\n    if (!matchesKeyGroup(e, group)) {\n      if (isSequence) resetSequence()\n      return\n    }\n\n    if (toValue(preventDefault)) e.preventDefault()\n\n    if (!isSequence) {\n      callback(e)\n      return\n    }\n\n    clearTimer()\n    groupIndex++\n\n    if (groupIndex === keyGroups.length) {\n      callback(e)\n      resetSequence()\n      return\n    }\n\n    timeout = window.setTimeout(resetSequence, toValue(sequenceTimeout))\n  }\n\n  function cleanup () {\n    window.removeEventListener(toValue(event), handler)\n    clearTimer()\n  }\n\n  watch(() => toValue(keys), function (unrefKeys) {\n    cleanup()\n\n    if (unrefKeys) {\n      const groups = splitKeySequence(unrefKeys.toLowerCase())\n      isSequence = groups.length > 1\n      keyGroups = groups\n      resetSequence()\n      window.addEventListener(toValue(event), handler)\n    }\n  }, { immediate: true })\n\n  // Watch for changes in the event type to re-register the listener\n  watch(() => toValue(event), function (newEvent, oldEvent) {\n    if (oldEvent && keyGroups && keyGroups.length > 0) {\n      window.removeEventListener(oldEvent, handler)\n      window.addEventListener(newEvent, handler)\n    }\n  })\n\n  try {\n    getCurrentInstance('useHotkey')\n    onBeforeUnmount(cleanup)\n  } catch {\n    // Not in Vue setup context\n  }\n\n  function parseKeyGroup (group: string) {\n    const MODIFIERS = ['ctrl', 'shift', 'alt', 'meta', 'cmd']\n\n    // Use the shared combination splitting logic\n    const parts = splitKeyCombination(group.toLowerCase())\n\n    // If the combination is invalid, return empty result\n    if (parts.length === 0) {\n      return { modifiers: Object.fromEntries(MODIFIERS.map(m => [m, false])), actualKey: undefined }\n    }\n\n    const modifiers = Object.fromEntries(MODIFIERS.map(m => [m, false])) as Record<string, boolean>\n    let actualKey: string | undefined\n\n    for (const part of parts) {\n      if (MODIFIERS.includes(part)) {\n        modifiers[part] = true\n      } else {\n        actualKey = part\n      }\n    }\n\n    return { modifiers, actualKey }\n  }\n\n  function matchesKeyGroup (e: KeyboardEvent, group: string) {\n    const { modifiers, actualKey } = parseKeyGroup(group)\n\n    const expectCtrl = modifiers.ctrl || (!isMac && (modifiers.cmd || modifiers.meta))\n    const expectMeta = isMac && (modifiers.cmd || modifiers.meta)\n\n    return (\n      e.ctrlKey === expectCtrl &&\n      e.metaKey === expectMeta &&\n      e.shiftKey === modifiers.shift &&\n      e.altKey === modifiers.alt &&\n      e.key.toLowerCase() === actualKey?.toLowerCase()\n    )\n  }\n\n  return cleanup\n}\n"],"mappings":"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","ignoreList":[]}