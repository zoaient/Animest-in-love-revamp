{"version":3,"file":"selectStrategies.js","names":["toRaw","independentSelectStrategy","mandatory","strategy","select","_ref","id","value","selected","on","Array","from","entries","reduce","arr","_ref2","key","push","length","set","in","v","children","parents","disabled","map","Map","out","independentSingleSelectStrategy","parentStrategy","_ref3","rest","singleSelected","has","get","slice","leafSelectStrategy","_ref4","leafSingleSelectStrategy","_ref5","classicSelectStrategy","_ref6","original","items","item","shift","parent","everySelected","noneSelected","child","cid","_ref7","trunkSelectStrategy"],"sources":["../../../src/composables/nested/selectStrategies.ts"],"sourcesContent":["/* eslint-disable sonarjs/no-identical-functions */\n// Utilities\nimport { toRaw } from 'vue'\n\ntype SelectStrategyFunction = (data: {\n  id: unknown\n  value: boolean\n  selected: Map<unknown, 'on' | 'off' | 'indeterminate'>\n  children: Map<unknown, unknown[]>\n  parents: Map<unknown, unknown>\n  disabled: Set<unknown>\n  event?: Event\n}) => Map<unknown, 'on' | 'off' | 'indeterminate'>\n\ntype SelectStrategyTransformInFunction = (\n  v: readonly unknown[] | undefined,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n  disabled: Set<unknown>,\n) => Map<unknown, 'on' | 'off' | 'indeterminate'>\n\ntype SelectStrategyTransformOutFunction = (\n  v: Map<unknown, 'on' | 'off' | 'indeterminate'>,\n  children: Map<unknown, unknown[]>,\n  parents: Map<unknown, unknown>,\n) => unknown[]\n\nexport type SelectStrategy = {\n  select: SelectStrategyFunction\n  in: SelectStrategyTransformInFunction\n  out: SelectStrategyTransformOutFunction\n}\n\nexport const independentSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const strategy: SelectStrategy = {\n    select: ({ id, value, selected }) => {\n      id = toRaw(id)\n\n      // When mandatory and we're trying to deselect when id\n      // is the only currently selected item then do nothing\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries())\n          .reduce((arr, [key, value]) => {\n            if (value === 'on') arr.push(key)\n            return arr\n          }, [] as unknown[])\n        if (on.length === 1 && on[0] === id) return selected\n      }\n\n      selected.set(id, value ? 'on' : 'off')\n\n      return selected\n    },\n    in: (v, children, parents, disabled) => {\n      const map = new Map()\n\n      for (const id of (v || [])) {\n        strategy.select({\n          id,\n          value: true,\n          selected: map,\n          children,\n          parents,\n          disabled,\n        })\n      }\n\n      return map\n    },\n    out: v => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on') arr.push(key)\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n\nexport const independentSingleSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ selected, id, ...rest }) => {\n      id = toRaw(id)\n      const singleSelected = selected.has(id) ? new Map([[id, selected.get(id)!]]) : new Map()\n      return parentStrategy.select({ ...rest, id, selected: singleSelected })\n    },\n    in: (v, children, parents, disabled) => {\n      if (v?.length) {\n        return parentStrategy.in(v.slice(0, 1), children, parents, disabled)\n      }\n\n      return new Map()\n    },\n    out: (v, children, parents) => {\n      return parentStrategy.out(v, children, parents)\n    },\n  }\n\n  return strategy\n}\n\nexport const leafSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ id, selected, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return selected\n\n      return parentStrategy.select({ id, selected, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const leafSingleSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = independentSingleSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: ({ id, selected, children, ...rest }) => {\n      id = toRaw(id)\n      if (children.has(id)) return selected\n\n      return parentStrategy.select({ id, selected, children, ...rest })\n    },\n    in: parentStrategy.in,\n    out: parentStrategy.out,\n  }\n\n  return strategy\n}\n\nexport const classicSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const strategy: SelectStrategy = {\n    select: ({ id, value, selected, children, parents, disabled }) => {\n      id = toRaw(id)\n      const original = new Map(selected)\n\n      const items = [id]\n\n      while (items.length) {\n        const item = items.shift()!\n\n        if (!disabled.has(item)) {\n          selected.set(toRaw(item), value ? 'on' : 'off')\n        }\n\n        if (children.has(item)) {\n          items.push(...children.get(item)!)\n        }\n      }\n\n      let parent = toRaw(parents.get(id))\n\n      while (parent) {\n        let everySelected = true\n        let noneSelected = true\n\n        for (const child of children.get(parent)!) {\n          const cid = toRaw(child)\n\n          if (disabled.has(cid)) continue\n          if (selected.get(cid) !== 'on') everySelected = false\n          if (selected.has(cid) && selected.get(cid) !== 'off') noneSelected = false\n          if (!everySelected && !noneSelected) break\n        }\n\n        selected.set(parent, everySelected ? 'on' : noneSelected ? 'off' : 'indeterminate')\n\n        parent = toRaw(parents.get(parent))\n      }\n\n      // If mandatory and planned deselect results in no selected\n      // items then we can't do it, so return original state\n      if (mandatory && !value) {\n        const on = Array.from(selected.entries())\n          .reduce((arr, [key, value]) => {\n            if (value === 'on') arr.push(key)\n            return arr\n          }, [] as unknown[])\n        if (on.length === 0) return original\n      }\n\n      return selected\n    },\n    in: (v, children, parents, disabled) => {\n      let map = new Map()\n\n      for (const id of (v || [])) {\n        map = strategy.select({\n          id,\n          value: true,\n          selected: map,\n          children,\n          parents,\n          disabled,\n        })\n      }\n\n      return map\n    },\n    out: (v, children) => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on' && !children.has(key)) arr.push(key)\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n\nexport const trunkSelectStrategy = (mandatory?: boolean): SelectStrategy => {\n  const parentStrategy = classicSelectStrategy(mandatory)\n\n  const strategy: SelectStrategy = {\n    select: parentStrategy.select,\n    in: parentStrategy.in,\n    out: (v, children, parents) => {\n      const arr = []\n\n      for (const [key, value] of v.entries()) {\n        if (value === 'on') {\n          if (parents.has(key)) {\n            const parent = parents.get(key)\n            if (v.get(parent) === 'on') continue\n          }\n          arr.push(key)\n        }\n      }\n\n      return arr\n    },\n  }\n\n  return strategy\n}\n"],"mappings":"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","ignoreList":[]}